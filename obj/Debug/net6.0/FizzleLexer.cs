//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Nicho\Desktop\C#\FizzleCompiler\Content\Fizzle.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FizzleCompiler.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class FizzleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, WHILE=21, BOOL_OPERATOR=22, INTEGER=23, 
		FLOAT=24, STRING=25, BOOL=26, NULL=27, WS=28, IDENTIFIER=29;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "WHILE", "BOOL_OPERATOR", "INTEGER", "FLOAT", 
		"STRING", "BOOL", "NULL", "WS", "IDENTIFIER"
	};


	public FizzleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'if'", "'else'", "'='", "'('", "','", "')'", "'!'", "'*'", 
		"'/'", "'+'", "'-'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'{'", 
		"'}'", null, null, null, null, null, null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "WHILE", "BOOL_OPERATOR", 
		"INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Fizzle.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1F\xC3\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3"+
		"\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3"+
		"\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3"+
		"\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x5\x16x\n"+
		"\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x5\x17\x82"+
		"\n\x17\x3\x18\x6\x18\x85\n\x18\r\x18\xE\x18\x86\x3\x19\x6\x19\x8A\n\x19"+
		"\r\x19\xE\x19\x8B\x3\x19\x3\x19\x6\x19\x90\n\x19\r\x19\xE\x19\x91\x3\x1A"+
		"\x3\x1A\a\x1A\x96\n\x1A\f\x1A\xE\x1A\x99\v\x1A\x3\x1A\x3\x1A\x3\x1A\a"+
		"\x1A\x9E\n\x1A\f\x1A\xE\x1A\xA1\v\x1A\x3\x1A\x5\x1A\xA4\n\x1A\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\xAF\n\x1B"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x6\x1D\xB7\n\x1D\r\x1D\xE\x1D"+
		"\xB8\x3\x1D\x3\x1D\x3\x1E\x3\x1E\a\x1E\xBF\n\x1E\f\x1E\xE\x1E\xC2\v\x1E"+
		"\x2\x2\x2\x1F\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t"+
		"\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F"+
		"\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F\x3\x2"+
		"\b\x3\x2\x32;\x3\x2$$\x3\x2))\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61"+
		"\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\xCE\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x3"+
		"=\x3\x2\x2\x2\x5?\x3\x2\x2\x2\a\x42\x3\x2\x2\x2\tG\x3\x2\x2\x2\vI\x3\x2"+
		"\x2\x2\rK\x3\x2\x2\x2\xFM\x3\x2\x2\x2\x11O\x3\x2\x2\x2\x13Q\x3\x2\x2\x2"+
		"\x15S\x3\x2\x2\x2\x17U\x3\x2\x2\x2\x19W\x3\x2\x2\x2\x1BY\x3\x2\x2\x2\x1D"+
		"\\\x3\x2\x2\x2\x1F_\x3\x2\x2\x2!\x61\x3\x2\x2\x2#\x63\x3\x2\x2\x2%\x66"+
		"\x3\x2\x2\x2\'i\x3\x2\x2\x2)k\x3\x2\x2\x2+w\x3\x2\x2\x2-\x81\x3\x2\x2"+
		"\x2/\x84\x3\x2\x2\x2\x31\x89\x3\x2\x2\x2\x33\xA3\x3\x2\x2\x2\x35\xAE\x3"+
		"\x2\x2\x2\x37\xB0\x3\x2\x2\x2\x39\xB6\x3\x2\x2\x2;\xBC\x3\x2\x2\x2=>\a"+
		"=\x2\x2>\x4\x3\x2\x2\x2?@\ak\x2\x2@\x41\ah\x2\x2\x41\x6\x3\x2\x2\x2\x42"+
		"\x43\ag\x2\x2\x43\x44\an\x2\x2\x44\x45\au\x2\x2\x45\x46\ag\x2\x2\x46\b"+
		"\x3\x2\x2\x2GH\a?\x2\x2H\n\x3\x2\x2\x2IJ\a*\x2\x2J\f\x3\x2\x2\x2KL\a."+
		"\x2\x2L\xE\x3\x2\x2\x2MN\a+\x2\x2N\x10\x3\x2\x2\x2OP\a#\x2\x2P\x12\x3"+
		"\x2\x2\x2QR\a,\x2\x2R\x14\x3\x2\x2\x2ST\a\x31\x2\x2T\x16\x3\x2\x2\x2U"+
		"V\a-\x2\x2V\x18\x3\x2\x2\x2WX\a/\x2\x2X\x1A\x3\x2\x2\x2YZ\a?\x2\x2Z[\a"+
		"?\x2\x2[\x1C\x3\x2\x2\x2\\]\a#\x2\x2]^\a?\x2\x2^\x1E\x3\x2\x2\x2_`\a@"+
		"\x2\x2` \x3\x2\x2\x2\x61\x62\a>\x2\x2\x62\"\x3\x2\x2\x2\x63\x64\a@\x2"+
		"\x2\x64\x65\a?\x2\x2\x65$\x3\x2\x2\x2\x66g\a>\x2\x2gh\a?\x2\x2h&\x3\x2"+
		"\x2\x2ij\a}\x2\x2j(\x3\x2\x2\x2kl\a\x7F\x2\x2l*\x3\x2\x2\x2mn\ay\x2\x2"+
		"no\aj\x2\x2op\ak\x2\x2pq\an\x2\x2qx\ag\x2\x2rs\aw\x2\x2st\ap\x2\x2tu\a"+
		"v\x2\x2uv\ak\x2\x2vx\an\x2\x2wm\x3\x2\x2\x2wr\x3\x2\x2\x2x,\x3\x2\x2\x2"+
		"yz\a\x63\x2\x2z{\ap\x2\x2{\x82\a\x66\x2\x2|}\aq\x2\x2}\x82\at\x2\x2~\x7F"+
		"\az\x2\x2\x7F\x80\aq\x2\x2\x80\x82\at\x2\x2\x81y\x3\x2\x2\x2\x81|\x3\x2"+
		"\x2\x2\x81~\x3\x2\x2\x2\x82.\x3\x2\x2\x2\x83\x85\t\x2\x2\x2\x84\x83\x3"+
		"\x2\x2\x2\x85\x86\x3\x2\x2\x2\x86\x84\x3\x2\x2\x2\x86\x87\x3\x2\x2\x2"+
		"\x87\x30\x3\x2\x2\x2\x88\x8A\t\x2\x2\x2\x89\x88\x3\x2\x2\x2\x8A\x8B\x3"+
		"\x2\x2\x2\x8B\x89\x3\x2\x2\x2\x8B\x8C\x3\x2\x2\x2\x8C\x8D\x3\x2\x2\x2"+
		"\x8D\x8F\a\x30\x2\x2\x8E\x90\t\x2\x2\x2\x8F\x8E\x3\x2\x2\x2\x90\x91\x3"+
		"\x2\x2\x2\x91\x8F\x3\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x32\x3\x2\x2\x2"+
		"\x93\x97\a$\x2\x2\x94\x96\n\x3\x2\x2\x95\x94\x3\x2\x2\x2\x96\x99\x3\x2"+
		"\x2\x2\x97\x95\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x9A\x3\x2\x2\x2\x99"+
		"\x97\x3\x2\x2\x2\x9A\xA4\a$\x2\x2\x9B\x9F\a)\x2\x2\x9C\x9E\n\x4\x2\x2"+
		"\x9D\x9C\x3\x2\x2\x2\x9E\xA1\x3\x2\x2\x2\x9F\x9D\x3\x2\x2\x2\x9F\xA0\x3"+
		"\x2\x2\x2\xA0\xA2\x3\x2\x2\x2\xA1\x9F\x3\x2\x2\x2\xA2\xA4\a)\x2\x2\xA3"+
		"\x93\x3\x2\x2\x2\xA3\x9B\x3\x2\x2\x2\xA4\x34\x3\x2\x2\x2\xA5\xA6\av\x2"+
		"\x2\xA6\xA7\at\x2\x2\xA7\xA8\aw\x2\x2\xA8\xAF\ag\x2\x2\xA9\xAA\ah\x2\x2"+
		"\xAA\xAB\a\x63\x2\x2\xAB\xAC\an\x2\x2\xAC\xAD\au\x2\x2\xAD\xAF\ag\x2\x2"+
		"\xAE\xA5\x3\x2\x2\x2\xAE\xA9\x3\x2\x2\x2\xAF\x36\x3\x2\x2\x2\xB0\xB1\a"+
		"p\x2\x2\xB1\xB2\aw\x2\x2\xB2\xB3\an\x2\x2\xB3\xB4\an\x2\x2\xB4\x38\x3"+
		"\x2\x2\x2\xB5\xB7\t\x5\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8"+
		"\xB6\x3\x2\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xBB\b\x1D"+
		"\x2\x2\xBB:\x3\x2\x2\x2\xBC\xC0\t\x6\x2\x2\xBD\xBF\t\a\x2\x2\xBE\xBD\x3"+
		"\x2\x2\x2\xBF\xC2\x3\x2\x2\x2\xC0\xBE\x3\x2\x2\x2\xC0\xC1\x3\x2\x2\x2"+
		"\xC1<\x3\x2\x2\x2\xC2\xC0\x3\x2\x2\x2\xE\x2w\x81\x86\x8B\x91\x97\x9F\xA3"+
		"\xAE\xB8\xC0\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace FizzleCompiler.Content
